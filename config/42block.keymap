#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        gaming_active: gaming_active {
            compatible = "zmk,behavior-tap-dance";
            label = "GAMING_ACTIVE";
            #binding-cells = <0>;
            bindings = <&kp Q>, <&to 3>;
        };

        gaming_deactive: gaming_deactive {
            compatible = "zmk,behavior-tap-dance";
            label = "GAMING_DEACTIVE";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_SHIFT>, <&to 0>;
        };
    };

    macros {
        vim___0: vim___0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp END &kp ENTER>;
            label = "vim___0";
        };

        vim___w: vim___w {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "VIM___W";
        };
    };

    keymap {
        compatible = "zmk,keymap";
        label = "42block";

        default_layer {
            label = "Default";
            bindings = <
&kp TAB    &gaming_active  &kp W  &kp E             &kp R        &lt 8 T    &lt 8 Y  &kp U        &kp I              &kp O       &kp P      &kp BACKSPACE
&lt 4 ESC  &lt 2 A         &kp S  &mt LEFT_SHIFT D  &mt LCTRL F  &kp G      &kp H    &mt RCTRL J  &mt RIGHT_SHIFT K  &kp L       &kp SEMI   &kp SQT
&kp LSHFT  &kp Z           &kp X  &lt 5 C           &lt 6 V      &lt 7 B    &kp N    &kp M        &kp COMMA          &kp PERIOD  &kp SLASH  &kp LS(LG(LA(LCTRL)))
                                  &kp LG(LGUI)      &kp LALT     &kp LCTRL  &kp RET  &lt 1 SPACE  &kp RSHFT
            >;
        };

        symbols {
            bindings = <
&kp LS(EXCL)  &kp LS(EXCL)  &kp LS(AT)  &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)  &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)  &kp LS(LPAR)  &kp LS(RPAR)  &kp DEL
&trans        &trans        &trans      &trans         &trans        &trans         &trans         &trans        &trans        &trans        &trans        &trans
&trans        &trans        &trans      &trans         &trans        &trans         &kp MINUS      &kp EQUAL     &kp LS(LBRC)  &kp LS(RBRC)  &kp LS(PIPE)  &kp LS(TILDE)
                                        &kp BACKSPACE  &kp TAB       &kp DEL        &trans         &trans        &trans
            >;
        };

        numpad {
            bindings = <
&kp TAB  &trans  &trans     &kp LBKT                         &kp RBKT                                &lt 8 PERCENT  &kp LS(PLUS)  &kp N7  &kp N8  &kp N9  &kp STAR       &kp BSPC
&trans   &trans  &kp UNDER  &mt LEFT_SHIFT LEFT_PARENTHESIS  &mt LS(LEFT_CONTROL) RIGHT_PARENTHESIS  &kp LS(DLLR)   &kp MINUS     &kp N4  &kp N5  &kp N6  &kp LS(UNDER)  &kp GRAVE
&trans   &trans  &kp DOT    &kp LS(LEFT_BRACE)               &kp LS(RIGHT_BRACE)                     &kp N0         &kp N0        &kp N1  &kp N2  &kp N3  &kp DOT        &kp FSLH
                            &trans                           &trans                                  &trans         &trans        &trans  &trans
            >;
        };

        gaming {
            bindings = <
&kp TAB                  &kp Q  &kp W  &kp E      &kp R      &kp T      &kp Y      &kp U      &kp I           &kp O    &kp P     &kp BSPC
&kp LSHFT                &kp A  &kp S  &kp D      &kp F      &kp G      &kp H      &kp J      &kp K           &kp L    &kp L     &kp SQT
&mt LEFT_CONTROL ESCAPE  &kp Z  &kp X  &kp C      &kp V      &kp B      &kp N      &kp M      &kp COMMA       &kp DOT  &kp FSLH  &trans
                                       &kp LSHFT  &kp SPACE  &kp LCTRL  &kp ENTER  &kp SPACE  &gaming_active
            >;
        };

        vimmy {
            bindings = <
&kp TAB  &trans   &kp LC(RIGHT)  &kp LC(RIGHT)  &kp LEFT   &trans        &kp LC(C)  &kp PG_UP  &kp HOME   &vim___0   &kp LC(V)  &kp DEL
&trans   &kp END  &kp HOME       &kp PG_DN      &trans     &trans        &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &trans     &trans
&trans   &trans   &trans         &trans         &kp GRAVE  &kp LC(LEFT)  &trans     &trans     &kp LBKT   &kp RBKT   &kp BSLH   &kp LS(TILDE)
                                 &trans         &trans     &trans        &kp RET    &trans     &kp RSHFT
            >;
        };

        switchwin {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LG(N7)  &kp LG(N8)  &kp LG(N9)  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LG(N4)  &kp LG(N5)  &kp LG(N6)  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LG(N1)  &kp LG(N2)  &kp LG(N3)  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans      &trans
            >;
        };

        joinwin {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LG(LC(N7))  &kp LG(LC(N8))  &kp LG(LC(N9))  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LG(LC(N4))  &kp LG(LC(N5))  &kp LG(LC(N6))  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LG(LC(N1))  &kp LG(LC(N2))  &kp LG(LC(N3))  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans          &trans
            >;
        };

        sendwin {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LG(LS(N7))  &kp LG(LS(N8))  &kp LG(LS(N9))  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LG(LS(N4))  &kp LG(LS(N5))  &kp LG(LS(N6))  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LG(LS(N1))  &kp LG(LS(N2))  &kp LG(LS(N3))  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans          &trans
            >;
        };

        fkeys {
            bindings = <
&bootloader  &trans  &bt BT_SEL 7  &bt BT_SEL 8  &bt BT_SEL 9  &out OUT_USB  &trans   &kp F7  &kp F8  &kp F9  &trans   &trans
&bt BT_CLR   &trans  &bt BT_SEL 4  &bt BT_SEL 5  &bt BT_SEL 6  &out OUT_BLE  &trans   &kp F4  &kp F5  &kp F6  &kp F11  &kp F12
&trans       &trans  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 0  &kp F10  &kp F1  &kp F2  &kp F3  &trans   &trans
                                   &trans        &trans        &mo 9         &trans   &trans  &trans
            >;
        };

        media {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans      &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp K_PREVIOUS    &kp K_NEXT  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans      &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &kp K_PLAY_PAUSE  &trans
            >;
        };
    };
};
